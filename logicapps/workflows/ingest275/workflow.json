{
  "definition": {
    "$schema": "https://schema.management.azure.com/schemas/2023-01-31-preview/workflowdefinition.json#",
    "contentVersion": "1.0.0.0",
    "triggers": {
      "SFTP_New_or_Updated_File": {
        "type": "ApiConnection",
        "inputs": {
          "host": { "connection": { "name": "@parameters('$connections')['sftp-ssh']['connectionId']" } },
          "method": "get",
          "path": "/datasets/default/triggers/onupdatedfile",
          "queries": {
            "folderId": "@parameters('sftp_inbound_folder')",
            "maxFileCount": 10
          }
        },
        "recurrence": { "frequency": "Minute", "interval": 5 },
        "splitOn": "@triggerBody()?['path']"
      }
    },
    "actions": {
      "Get_file_content": {
        "type": "ApiConnection",
        "inputs": {
          "host": { "connection": { "name": "@parameters('$connections')['sftp-ssh']['connectionId']" } },
          "method": "get",
          "path": "/datasets/default/files/@{encodeURIComponent(triggerBody()?['path'])}/content"
        },
        "runAfter": {}
      },
      "Store_Raw_in_Blob": {
        "type": "ApiConnection",
        "inputs": {
          "host": { "connection": { "name": "@parameters('$connections')['azureblob']['connectionId']" } },
          "method": "post",
          "path": "/datasets/@{encodeURIComponent(parameters('blob_storage_account'))}/files",
          "queries": {
            "folderPath": "@concat(parameters('blob_raw_folder'), '/', formatDateTime(utcNow(), 'yyyy/MM/dd'))",
            "name": "@{replace(last(split(triggerBody()?['path'], '/')), '.','_')}-@{utcNow()}.edi"
          },
          "body": "@outputs('Get_file_content')?['body']"
        },
        "runAfter": { "Get_file_content": [ "Succeeded" ] }
      },
      "Decode_X12_275": {
        "type": "ApiConnection",
        "inputs": {
          "host": { "connection": { "name": "@parameters('$connections')['integrationaccount']['connectionId']" } },
          "method": "post",
          "path": "/decode/edi",
          "body": {
            "content": "@base64(outputs('Get_file_content')?['body'])",
            "contentType": "application/edi-x12",
            "agreementType": "X12",
            "messageType": "@parameters('x12_275_messagetype')",
            "senderId": "@parameters('x12_sender_id')",
            "receiverId": "@parameters('x12_receiver_id')"
          }
        },
        "runAfter": { "Store_Raw_in_Blob": [ "Succeeded" ] }
      },
   "Extract_Metadata": {
  "type": "Compose",
  "inputs": {
    "claimNumber": "@{coalesce(body('Decode_X12_275')?['interchanges']?[0]?['groups']?[0]?['transactions']?[0]?['segments']?['TRN']?[0]?['TRN02'], '')}",
    "memberId": "@{coalesce(first(where(body('Decode_X12_275')?['interchanges']?[0]?['groups']?[0]?['transactions']?[0]?['segments']?['NM1'], equals(item()?['NM101'],'IL')))?['NM109'], '')}",
    "providerNpi": "@{coalesce(first(where(body('Decode_X12_275')?['interchanges']?[0]?['groups']?[0]?['transactions']?[0]?['segments']?['NM1'], equals(item()?['NM101'],'PR')))?['NM109'], '')}",
    "serviceFromDate": "@{coalesce(first(where(body('Decode_X12_275')?['interchanges']?[0]?['groups']?[0]?['transactions']?[0]?['segments']?['DTM'], equals(item()?['DTM01'],'472')))?['DTM02'], '')}",
    "rfaiReference": "@{coalesce(body('Decode_X12_275')?['interchanges']?[0]?['groups']?[0]?['transactions']?[0]?['segments']?['REF']?[0]?['REF02'], '')}"
  },
  "runAfter": { "Decode_X12_275": [ "Succeeded" ] }
  },
  "Branch_Solicited": {
        "type": "If",
        "expression": {
          "not": [
            { "equals": [ "@outputs('Extract_Metadata')?['rfaiReference']", "" ] }
          ]
        },
        "actions": {
          "Send_to_ServiceBus_Solicited": {
            "type": "ApiConnection",
            "inputs": {
              "host": { "connection": { "name": "@parameters('$connections')['servicebus']['connectionId']" } },
              "method": "post",
              "path": "/@{encodeURIComponent(parameters('sb_namespace'))}/topics/@{encodeURIComponent(parameters('sb_topic'))}/messages",
              "body": {
                "contentData": "@base64(outputs('Get_file_content')?['body'])",
                "userProperties": {
                  "type": "solicited",
                  "claimNumber": "@outputs('Extract_Metadata')?['claimNumber']",
                  "memberId": "@outputs('Extract_Metadata')?['memberId']",
                  "rfaiReference": "@outputs('Extract_Metadata')?['rfaiReference']"
                }
              }
            }
          }
        },
        "else": {
          "actions": {
            "Send_to_ServiceBus_Unsolicited": {
              "type": "ApiConnection",
              "inputs": {
                "host": { "connection": { "name": "@parameters('$connections')['servicebus']['connectionId']" } },
                "method": "post",
                "path": "/@{encodeURIComponent(parameters('sb_namespace'))}/topics/@{encodeURIComponent(parameters('sb_topic'))}/messages",
                "body": {
                  "contentData": "@base64(outputs('Get_file_content')?['body'])",
                  "userProperties": {
                    "type": "unsolicited",
                    "claimNumber": "@outputs('Extract_Metadata')?['claimNumber']",
                    "memberId": "@outputs('Extract_Metadata')?['memberId']",
                    "serviceFromDate": "@outputs('Extract_Metadata')?['serviceFromDate']"
                  }
                }
              }
            }
          }
        },
        "runAfter": { "Extract_Metadata": [ "Succeeded" ] }
      },
      "Call_QNXT_Claim_Linkage_API": {
        "type": "Http",
        "inputs": {
          "method": "POST",
          "uri": "@{parameters('qnxt_base_url')}/claims/link-attachment",
          "headers": {
            "Authorization": "Bearer @{parameters('qnxt_api_token')}",
            "Content-Type": "application/json"
          },
          "body": {
            "claimNumber": "@outputs('Extract_Metadata')?['claimNumber']",
            "memberId": "@outputs('Extract_Metadata')?['memberId']",
            "rfaiReference": "@outputs('Extract_Metadata')?['rfaiReference']",
            "dataLakePath": "@concat(parameters('blob_raw_folder'), '/', formatDateTime(utcNow(), 'yyyy/MM/dd'))",
            "fileName": "@{replace(last(split(triggerBody()?['path'], '/')), '.','_')}-@{utcNow()}.edi"
          }
        },
        "runtimeConfiguration": {
          "retry": {
            "count": 4,
            "type": "fixed",
            "interval": "PT15S"
          }
        },
        "runAfter": { "Branch_Solicited": [ "Succeeded" ] }
      }
    },
    "outputs": {}
  },
  "kind": "Stateful",
  "parameters": {
    "$connections": { "type": "Object", "defaultValue": {} },
    "sftp_inbound_folder": { "type": "String", "defaultValue": "/inbound/attachments" },
    "blob_storage_account": { "type": "String", "defaultValue": "default" },
    "blob_raw_folder": { "type": "String", "defaultValue": "hipaa-attachments/raw/275" },
    "sb_namespace": { "type": "String", "defaultValue": "attachments-bus" },
    "sb_topic": { "type": "String", "defaultValue": "attachments-in" },
    "qnxt_base_url": { "type": "String", "defaultValue": "https://qnxt.api.local" },
    "qnxt_api_token": { "type": "String", "defaultValue": "<token>" },
    "x12_sender_id": { "type": "String", "defaultValue": "030240928" },
    "x12_receiver_id": { "type": "String", "defaultValue": "66917" },
    "x12_275_messagetype": { "type": "String", "defaultValue": "X12_005010X210_275" }
  }
}